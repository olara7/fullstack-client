{"version":3,"sources":["components/AddPostModal/AddPostModal.js","pages/Profile/Profile.js","components/Post/Post.js","pages/Posts/Posts.js","pages/Signup/Signup.js","pages/Signin/Signin.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["CREATE_POST","gql","AddPostModal","refetch","useState","show","setShow","useMutation","createPost","data","handleClose","loading","content","setContent","title","setTitle","error","setError","useEffect","postCreate","userErrors","length","message","token","localStorage","setItem","Button","variant","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","className","controlId","Label","Control","type","placeholder","value","onChange","e","target","as","rows","Footer","variables","setTimeout","GET_PROFILE","Profile","id","useParams","useQuery","userId","profile","style","marginBottom","display","justifyContent","user","name","bio","isMyProfile","posts","map","post","date","createdAt","DELETE_POST","Post","deletePost","formatedDate","Date","Number","postId","split","splice","join","to","GET_POSTS","Posts","console","log","SIGNUP","Signup","signup","email","setEmail","password","setPassword","setName","setBio","window","location","SIGNIN","Signin","signin","GET_ME","Navbar","me","removeItem","reload","App","strict","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","authLink","setContext","_","headers","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.03557636.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { gql, useMutation } from \"@apollo/client\";\n\nconst CREATE_POST = gql`\n  mutation CreatePost($title: String!, $content: String!) {\n  postCreate(post: {\n    title: $title,\n    content:  $content\n  }) {\n    userErrors {\n      message\n    }\n    post {\n      title\n      content\n      createdAt\n      user {\n        name\n      }\n    }\n  }\n}\n`\n\nexport default function AddPostModal({ refetch }) {\n  const [show, setShow] = useState(false);\n  const [ createPost, { data, loading} ] = useMutation(CREATE_POST)\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [content, setContent] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  const [error, setError] = useState(null);\n\n\n  const handleClick = () => {\n    if(!content || !title) return;\n    else {\n        createPost({\n          variables: {\n          title,\n          content,\n      },\n    });\n    handleClose();\n    //add timeout on refetch to let server update database\n    setTimeout(() => { refetch()}, 700);\n  };\n}\n  useEffect(() => {\n    if (data) {\n      if (data.postCreate.userErrors.length) {\n        setError(data.postCreate.userErrors[0].message);\n      }\n      if (data.postCreate.token) {\n        localStorage.setItem(\"token\", data.postCreate.token);\n      }\n    }\n  }, [data]);\n\n  return (\n    <>\n      <Button variant=\"success\" onClick={handleShow}>\n        Add Post\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Post</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group\n              className=\"mb-3\"\n              controlId=\"exampleForm.ControlTextarea1\"\n            >\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                value={content}\n                onChange={(e) => setContent(e.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          {error && <p> {error} </p>}\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"success\" onClick={handleClick}>\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport AddPostModal from \"../../components/AddPostModal/AddPostModal\";\nimport Post from \"../../components/Post/Post\";\nimport { gql, useQuery, refetch } from \"@apollo/client\";\n\nimport \"./Profile.css\"\n\nconst GET_PROFILE = gql`\n  query GetProfile($userId: ID!){\n  profile(userId: $userId){\n    bio\n    isMyProfile\n    user {\n      id\n      name\n      posts {\n        id\n        title\n        content\n        createdAt\n      }\n    }\n  }\n}\n`\n\nexport default function Profile() {\n  //get id from params to use to get profile\n  const { id } = useParams();\n\n  //pass the id from params to the get profile query as a variable\n  const { data, error, loading, refetch } = useQuery(GET_PROFILE, {\n    variables: {\n      userId: id\n    }\n  });\n\n\n  if(error) return <div> Error getting profile </div>\n\n  if(loading) return <div> Loading profile... </div>\n\n  const { profile } = data\n  \n\n  return (\n    <div>\n      <div\n        style={{\n          marginBottom: \"2rem\",\n          display: \"flex \",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div className=\"profile\">\n          <h1>{profile.user.name}</h1>\n          <p>{profile.bio}</p>\n        </div>\n      </div>\n      <div>\n      <div className=\"add-button\">{profile.isMyProfile ? < AddPostModal {...{refetch}} /> : null}</div>\n        {profile.user.posts.map((post) => {\n          return (\n            <div className=\"card\">\n            <Post\n              key={post.id} \n              title={post.title} \n              content={post.content} \n              date={post.createdAt} \n              id={post.id}\n              //user={profile.user.name}\n              isMyProfile={profile.isMyProfile}\n              {...{refetch}}\n            />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport \"./Post.css\";\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\nimport Profile from \"../../pages/Profile/Profile\";\nimport { useIsRTL } from \"react-bootstrap/esm/ThemeProvider\";\nimport { Link } from 'react-router-dom'\n\n\nconst DELETE_POST = gql`\n  mutation deletePost($postId: ID!) {\n    postDelete(postId: $postId) {\n      userErrors {\n        message\n      }\n    post {\n      title\n    }\n    }\n}\n`;\n\nexport default function Post({\n  title,\n  content,\n  date,\n  user,\n  id,\n  userId,\n  isMyProfile,\n  refetch,\n}) {\n  const [deletePost, {data, loading}] = useMutation(DELETE_POST);\n\n  const formatedDate = new Date(Number(date));\n\n  return (\n    <div className=\"Post\">\n      {isMyProfile === true &&(\n        <p className=\"deleteBtn\" onClick={() => {\n          deletePost({\n            variables: {\n              postId: id,\n            },\n          });\n          //add timeout on refetch to let server update database\n          setTimeout(() => { refetch()}, 700);\n        }}\n        >\n        Delete Post\n        </p>\n      )}\n      <div>\n        <h2 className=\"post-title\">{title}</h2>\n        <p className=\"post-content\">{content}</p>\n        <h4 className=\"post-date\">\n         {`${formatedDate}`.split(\" \").splice(0, 3).join(\" \")}\n        </h4>\n        <Link className=\"post-user\" to={`/profile/${userId}`}> {user} </Link>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Post from \"../../components/Post/Post\";\nimport { gql, useQuery } from \"@apollo/client\"\nimport \"./Posts.css\"\n\nconst GET_POSTS = gql`\n  query {\n  posts {\n    id\n    title\n    content\n    createdAt\n    user {\n      id\n      name\n    }\n  }\n}\n`\n\nexport default function Posts() {\n\n  const { data, error, loading} = useQuery(GET_POSTS)\n\n  if(error) return <div> Error loading posts </div>\n\n  if(loading) return <div> Loading posts...</div>\n\n  console.log({\n    data,\n    error,\n    loading,\n  });\n\n  //destructure posts from data\n  const { posts } = data \n\n  return (\n  <div className=\"container\">\n    {posts.map((post) => {\n      return (<div className=\"card\">\n      <Post\n      key={post.id} \n      title={post.title} \n      content={post.content} \n      date={post.createdAt} \n      id={post.id}\n      userId={post.user.id}\n      user={post.user.name}\n      />\n      </div>\n    )})}\n  </div>\n  );\n}\n","import { useMutation, gql } from \"@apollo/client\";\nimport { Button } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nimport \"./Signup.css\"\n\nconst SIGNUP = gql`\n  mutation Signup(\n    $email: String!\n    $password: String!\n    $name: String!\n    $bio: String!\n  ) {\n    signup(\n      credentials: { email: $email, password: $password }\n      name: $name\n      bio: $bio\n    ) {\n      userErrors {\n        message\n      }\n      token\n    }\n  }\n`;\n\nexport default function Signup() {\n  const [signup, { data, loading }] = useMutation(SIGNUP);\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n\n  const handleClick = () => {\n    signup({\n      variables: {\n        email,\n        password,\n        name,\n        bio,\n      },\n    });\n  };\n\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (data) {\n      if (data.signup.userErrors.length) {\n        setError(data.signup.userErrors[0].message);\n      }\n      if (data.signup.token) {\n        localStorage.setItem(\"token\", data.signup.token);\n        window.location = \"/posts\"; //redirect user to posts after successfully signing in\n      }\n    }\n  }, [data]);\n\n  console.log(data)\n\n  return (\n    <div>\n      <Form className=\"signup-form\">\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Bio</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            value={bio}\n            onChange={(e) => setBio(e.target.value)}\n          />\n        </Form.Group>\n        {error && <p>{error}</p>}\n        <Button onClick={handleClick}>Signup</Button>\n      </Form>\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, Redirect } from 'react-router-dom';\n\nimport \"./Signin.css\"\n\nconst SIGNIN = gql`\nmutation Signin($email: String!, $password: String!) {\n  signin(credentials: {\n    email: $email,\n    password: $password\n  }){\n    userErrors {\n      message\n    }\n    token\n\n  }\n}\n`\n\nexport default function Signin() {\n\n  const [signin, {data, loading}] = useMutation(SIGNIN);\n\n  console.log(data)\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleClick = () => {\n    signin({\n      variables: {\n        email,\n        password,\n      },\n    });\n  };\n\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if(data) {\n      //if there is an error in sign in, set the error message\n      if(data.signin.userErrors.length) {\n        setError(data.signin.userErrors[0].message)\n      }\n      //if user sign in is correct, set token in local storage\n      if(data.signin.token){\n        localStorage.setItem(\"token\", data.signin.token);\n        window.location = \"/posts\"; //redirect user to posts after successfully signing in\n      }\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <Form className=\"signin-form\">\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        {error && <p>{error}</p>}\n        <Button onClick={handleClick}>Signin</Button>\n      </Form>\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\r\nimport { Route, Switch } from \"react-router\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\n//styles\r\nimport './Navbar.css'\r\n\r\nconst GET_ME = gql`\r\n    query GetMe {\r\n    me {\r\n        id\r\n        name\r\n    }\r\n}\r\n`\r\n\r\nexport default function Navbar() {\r\n\r\n    const { data, error, loading } = useQuery(GET_ME)\r\n\r\n    if(loading) return <div> Loading... </div>\r\n\r\n    if(error) return <div> Error </div>\r\n\r\n    const { me } = data\r\n\r\n    //console.log(data)\r\n\r\n    //const { me } = data\r\n\r\n    const handleClick = () => {\r\n        //remove token from local storage to log out user\r\n        localStorage.removeItem('token')\r\n\r\n        //refresh page\r\n        window.location.reload(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='navbar'>\r\n            <nav>\r\n                <Link to=\"/posts\" className='brand'>\r\n                    <h1> Blog App </h1>\r\n                </Link>\r\n                \r\n                {me ? <Link to={`/profile/${me.id}`} className='nav-items'>\r\n                    <h6> My Profile </h6>\r\n                </Link>: null }\r\n                {me ? <div onClick={handleClick} className=\"nav-items\"> \r\n                    <h6> Logout </h6>  \r\n                </div>: null }\r\n                \r\n                {!me ? <Link to=\"/signin\" className='nav-items'>\r\n                    <h6> Sign in</h6>\r\n                </Link>: null}\r\n                {!me ? <Link to=\"/signup\" className='nav-items'>\r\n                    <h6> Sign up</h6>\r\n                </Link>: null}\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import \"./App.css\";\nimport { Route, Switch } from \"react-router\";\nimport Posts from \"./pages/Posts/Posts\";\nimport Profile from \"./pages/Profile/Profile\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Signup from \"./pages/Signup/Signup\";\nimport Signin from \"./pages/Signin/Signin\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route strict exact path=\"/posts\" component={Posts} />\n        <Route strict exact path=\"/signup\" component={Signup} />\n        <Route strict exact path=\"/signin\" component={Signin} />\n        <Route strict exact path=\"/profile/:id\" component={Profile} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\"\nimport { setContext } from \"@apollo/client/link/context\"\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:4000/\"\n})\n\nconst authLink = setContext((_, { headers }) => {\n  //get token from local storage\n  const token = localStorage.getItem(\"token\")\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token,\n    },\n  };\n});\n\n//instantiate new apollo client\nconst client = new ApolloClient({\n  //pass token from client to server and cache to query results after fetching them\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n      </ApolloProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}